<html>

<head>
  <style>
    html {
      background: #f0ede3;
    }

    body {
      color: #1f1f1f;
      max-width: 750px;
      margin-left:  auto;
      margin-right: auto;
      padding: 2em;
      font: 12pt 'Helvetica Neue', Arial, sans-serif;
      line-height: 1.4em;
      background: #ffffff;
      border-radius: 10px;
    }

    pre, code {
      background: rgba(0, 120, 104, 0.18);
      overflow-x: auto;
      border-radius: 3px;
    }

    td, code {
      padding: 5px;
    }

    code {
      padding: 2px 5px;
    }

    td code {
      font-size: 125%;
    }

    pre code {
      padding: 0;
      background: none;
    }

    pre {
      border-left: 4px solid #007868;
      padding: 0.5em;
      padding-left: 0.75em;
    }

    pre.output {
      background: #e8e8e8;
      border-left: 4px solid #6b6b6b;
    }

    h2 {
      margin-top: 2em;
    }

    a {
      color: #007868;
    }

    a:hover {
      background: rgba(0, 120, 104, 0.3);
    }

    th {
      text-align: left;
    }

    li:not(:last-child) {
      margin-bottom: 1em;
    }

    img {
      max-width: 100%;
    }
  </style>

  <title>Storage service demo (${namespace})</title>
</head>

<body>
  <h1>Storage service demo (${namespace})</h1>

  <p>
    Congratulations!
    You have successfully created a running instance of the storage service in your AWS account.
    This page explains how you can try your new storage service, and how to clean it up afterwards.
  </p>

  <p>
    <strong>This is meant for demonstration purposes only.</strong>
  </p>

  <h2>Useful values</h2>

  <table>
    <tr>
      <th>Token URL</th>
      <td><a href="${token_url}">${token_url}</a></td>
    </tr>
    <tr>
      <th>API URL</th>
      <td><a href="${api_url}">${api_url}</a></td>
    </tr>
  </table>

  <h2>Ingest your first bag</h2>

  <p>
  You need to upload a bag to <code>${uploads_bucket}</code>, or you can use the example bag (<code>example_bag.tar.gz</code>).
  Your bag should have an External-Identifier in the <code>bag-info.txt</code>; for the example bag this is <code>test_bag</code>.
  </p>

  <p>
  Choose the name of your <strong>space</strong>.
  A space is used to group bags with similar content, e.g. <code>digitised</code> or <code>born-digital</code>.
  </p>

  <ol>
    <li>Retrieve your OAuth2 client ID and secret from Secrets Manager:

    <pre><code>aws secretsmanager get-secret-value --secret-id client_id
aws secretsmanager get-secret-value --secret-id client_secret</code></pre></li>

    <li>Fetch an access token for the OAuth2 credentials grant:

    <pre><code>curl -X POST "${token_url}" \</code>
  <code>--data grant_type=client_credentials \</code>
  <code>--data client_id="$CLIENT_ID" \</code>
  <code>--data client_secret="$CLIENT_SECRET"</code></pre>

    This will return a response like:

    <pre class="output"><code>{"access_token":"eyJraWQi...","expires_in":3600,"token_type":"Bearer"}</code></pre>

    Remember the <code>access_token</code>.

    <li>Ingest the example bag which is included in the prototype.
      Use your chosen space and external identifier, and pass the access token from the previous step:

    <pre><code>curl -X POST "${api_url}/ingests" \
  <code>--header "Authorization: $TOKEN" \</code>
  <code>--header "Content-Type: application/json" \</code>
  <code>--data '{</code>
    "type": "Ingest",
    "ingestType": {"id": "create", "type": "IngestType"},
    "space": {"id": "$SPACE", "type": "Space"},
    "sourceLocation": {
      "provider": {"id": "amazon-s3", "type": "Provider"},
      "bucket": "${uploads_bucket}",
      "path": "$UPLOADED_BAG",
      "type": "Location"
    },
    "bag": {
      "info": {
        "externalIdentifier": "$EXTERNAL_IDENTIFIER",
        "type": "BagInfo"
      },
      "type": "Bag"
    }
  }'
</code></pre>

    This will return a response like:

    <pre class="output"><code>{"id":"ffd3c8a3-9021-47bc-a68c-75eeaff1d4bd", â€¦}</code></pre>

    This is the <strong>ingest ID</strong>, which you can use to look up the state of an ingest.

    <li>Query the state of the ingest you just created:

    <pre><code>curl "${api_url}/ingests/$INGEST_ID" \
  --header "Authorization: $TOKEN"</code></pre>

    This will return a <strong>ingest</strong>.

    <li>If the ingest reaches the "succeeded" state, the bag has been successfully stored.
      You can then query the bag in the bags API:

        <pre><code>curl "${api_url}/bags/$SPACE/$EXTERNAL_IDENTIFIER" \
  --header "Authorization: $TOKEN"</code></pre>

    This will return a <strong>storage manifest</strong>.
  </li>
  </ol>

  <h2>Inspect application logs</h2>

  <p>
    Application logs are written to an Amazon Elasticsearch cluster.
    To see the logs:
  </p>

  <ol>
    <li>Retrieve your Elasticsearch username and password from Secrets Manager:

    <pre><code>aws secretsmanager get-secret-value --secret-id elasticsearch/user
aws secretsmanager get-secret-value --secret-id elasticsearch/password</code></pre>
  </li>

    <li>Log in to the Kibana instance associated with your Elasticsearch cluster, and start by looking at the index patterns:

      <p><a href="https://${kibana_url}app/management/kibana/indexPatterns">https://${kibana_url}app/management/kibana/indexPatterns</a></p></li>

    <li>If there are no index patterns yet, click the blue button "Click index pattern".

      <p>
    <img src="readme/kibana_index_patterns.png" alt="A panel that says 'You have data in Elasticsearch. Now, create an index pattern.' and a blue button 'Create index pattern'.">
  </p>

    <li>Type <code>firelens-*</code> as the name of your index pattern, then click "Next step".

      <p>
        <img src="readme/kibana_create_index_pattern.png" alt="A form titled 'Create index pattern' with a subheading 'Step 1 of 2: Define an index pattern'. There's a text input field labelled 'Index pattern name' and a blue button 'Next step'."></p>
    </li>

    <li>Select <code>@timestamp</code> as the time field for your index pattern, then click "Create index pattern".

      <p>
        <img src="readme/kibana_time_pattern.png" alt="The previous form, now with the subheading 'Step 2 of 2: Configure settings' and a dropdown field labelled 'Time field'."></p>
    </li>

    <li>Click the hamburger menu (three horizontal lines) in the top left-hand corner, and select the <a href="https://${kibana_url}app/discover#/">Discover view</a>.
      This allows you to browse your application logs.

      <p>
        <img src="readme/kibana_discover_view.png" alt="A dashboard with a horizontal graph showing number of logs by time, and below it three logs from the applications.">
    </li>
  </ol>


  <h2>Clean up your storage service</h2>

  <p>To clean up your resources, run:</p>

  <pre>
<code>aws s3 rm s3://${primary_bucket} --recursive</code>
<code>aws s3 rm s3://${glacier_bucket} --recursive</code>
<code>aws s3 rm s3://${uploads_bucket} --recursive</code>
<code>aws s3 rm s3://${unpacker_bucket} --recursive</code>
<code>terraform destroy</code></pre>

</body>